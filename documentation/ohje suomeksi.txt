

Huom, näihin ominaisuuksiin saattaa tulla muutoksia!


MODUULEJEN IMPORTTAUS:

from pygamesimpleobject import *




OBJEKTIN LUONTI:

obj = NewObject()

Objektille voi antaa ominaisuuksia luonnin yhteydessä (ja myöhemmin).

tämänhetkiset parametrit construktorille:
(image = None,position_x: int = 0, position_y: int = 0,object_size_x:int = 1,object_size_y:int = 1)

Objektin mitat on yhtä kuin kuvan mitat
jos objektilla ei ole kuvaa sen mitat voi antaa manuaalisesti, oletuksena 1x1.


KUVA:

Kuvaa voi vaihtaa
obj.SetImage(kuva)

Kuvan täysin mustat kohdat ovat läpinäkyviä!

LIIKKUMINEN:

obj.MoveX(matka: int)
Liikuttaa objektia annetun matkan verran oikealle tai vasemmalle jos luku negatiivinen.

obj.MoveY(matka: int)
Tekee saman pystysuunnassa.

obj.Move(matka:int)
Liikuttaa objektia sen kulman mukaan automaattisesti x,y suunnissa.
Kulma oletuksena 0,0 objekti liikkuu oikealle.



OBJEKTIN KÄÄNTÄMINEN:
obj.rotate(kulma:int,option:int = 1)
Metodi kääntää objektin kuvaa ja päivittää automaattisesti objektin koon ja sijainnin ja kulman
option parametri:
1 tarkoittaa että kulmaa kasvatetaan annetun luvun verran ja 2 sitä että annettu kulma asetetaan objektin kulmaksi
oletuksena 1

Huom: oletuksena objektin kulma on 0 ja se liikkuu suoraan oikealle!


OBJEKTIN PIIRTÄMINEN:
Piirtää objektit:
DrawObjects([obj1,obj2,map,obj3]) #funktiolle annetaan lista jossa objektit on
Listan alkioiden pitää olla objekteja tai alkioina voi olla myös listoja jossa objekteja
tämä helpottaa asioita mikäli objekteja on todella suuri määrä myös tilekartta piirretään näin.

Jos objektit haluaa piirtää manuaalisesti kannattaa käyttää objektin rect_ atribuuttia joka on pygamen rect olio
Tällöin objekti piirtyy oikein.


KAMERA:

Voit viedä DrawObjects funktiolle yhden objektin tällöin asiat piirretään niin että kyseinen objekti on ruudun keskellä ja saadaan aikaiseksi se että kamera seuraa tätä objektia:

DrawObjects([obj1,obj2,map,obj3],tracked_object)



TÖRMÄYKSET:


Seuraava tarkista törmääkö kaksi objektia:
CollisionCheck(obj1, obj2)


Funktio käyttää oletuksena objektin sen hetkistä sijaintia mutta sille voi myös antaa sijainnit:
CollisionCheck(obj1, obj2, obj1_x, obj1_y, obj2_x, obj2_y,check_all_tiles:bool=False)

Myös tälle voi antaa yksittäisen objektin sijasta listan jossa objekteja, listalle ei voi antaa vaihtoehtoista sijaintia.

Tälle voi viedä myös kartan parametrinä, tällöin se toimii oletuksena niin että törmäys tarkistetaan vain niihin tileihin mitkä määritetty törmättäviksi,
kuitenkin jos check_all_tiles parametriksi asetetaan True tarkistetaan törmäys kaikkiin tileihin.








Objektille voi lisätä törmäyksen toisen objektin kanssa:

AddCollision(obj1,obj2)
Tällöin kumpikaan objekti ei voi liikkua kummankaan läpi
Tällekkin on mahdollista antaa lista jossa objekteja:
AddCollision(obj1,lista)

Törmäyksen voi poistaa:
DelteCollision(obj1,obj2)


PYÖRISTETTY TÖRMÄYSTARKISTUS

Normaalisti törmäys tarkistetaan objektin suorakulmion mittojen mukaan, tämä saatta olla hiukan tökkivä menetelmä.
Objekteille esim pelaajalle voi asettaa seuraavan atribuutin:
obj.rounded_collision_check_ = True #normaalisti tämä on False

Tämä luo objektin sisälle ympyränmuotoisen alueen jonka perusteella törmäys tarkistetaan.
ympyrän säde on oletuksena 20 pikseliä, sen voi muuttaa:
obj.circle_radius_ = uusi_säde_kokonaisluku


