Simple 2D map system

Note that there may be changes to this!

The map is a text file composed of comma-separated numbers that the program reads. If the value is 1, image is 1,if value is 2, image is 2, and so on. If the value is 0, there is no image.

These images are taken from a separate tileset image, which is read from left to right.

In addition, there are letters a, b, c, or d.

a = no collision
b = collision
c = top layer
d = no tile

"a" and "b" are drawn first, and "c" is drawn last.

The file looks like this:

Example:
8,7;
1a,1a,1a,2a,2a,1a,3a,1a
1a,1a,1a,2a,2a,1a,3a,1a
1a,1a,1a,2a,2a,1a,3a,1a
1a,3b,1a,2a,2a,1a,3a,1a
1a,3b,3b,2a,2a,1a,3a,1a
1a,1a,1a,3a,2a,1c,3c,1c
4a,1a,1a,4a,4a,4c,4c,1c

The first line indicates the size of the map.

To use the tile map, enter:

map = TileMap(tilemap_path, tileset_path, tile_size=(32,32))

where tile_size = (x, y)

The program creates objects from this map and puts them into a list, which is then returned. The tile is a similar object to the others, but it lacks some features that are not needed for its operation.

The map can be exported to the draw function, which handles the drawing order automatically:

DrawObjects(obj1, obj2, map, obj3)

Tileset:
The tileset is an image file from which tiles are extracted. The dimensions of the image must be divisible by the size of the tile. The tiles are read from the image into a list from left to right and top to bottom, with the upper-left corner being tile 1.