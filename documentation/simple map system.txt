Simple 2D Map System

Note: Subject to changes!

Map File

The map is a text file composed of comma-separated numbers that the program reads. Each number corresponds to a tile image from a tileset, where 0 represents no image.

there is a letter in that place:

    a = no collision
    b = collision
    c = top layer
    d = no tile

The file looks like this:
Example:

8,7;
1a,1a,1a,2a,2a,1a,3a,1a
1a,1a,1a,2ae1,2a,1a,3a,1a
1a,1a,1a,2a,2a,1a,3a,1a
1a,3b,1a,2a,2a,1a,3a,1a
1a,3b,3b,2a,2a,1a,3a,1a
1a,1a,1a,3a,2a,1c,3c,1c
4a,1a,1a,4a,4a,4c,4c,1c


The first line indicates the map dimensions(x,y)

In addition to layers, it's possible to add data to a tile using the letter 'e', for example:
b2e1 (This indicates a collidable tile with image 2 and additional data 1)

Data can be an integer ranging from 1 to 500.

Tile Map Usage

The program generates objects from this map and adds them to a list, returning the list. A tile is similar to any other object but lacks functionalities unnecessary for its operation.

The map can be passed to the draw function, which automatically handles the drawing order.

Tileset

A tileset is an image file from which tiles are extracted. The dimensions of the image must be divisible by the tile size. Tiles are read from the image from left to right and top to bottom, starting from the top-left corner as tile 1.

Order Number

Each tile has a unique order number calculated from left to right and top to bottom, starting from 1.

Functions

    ReturnTilesHitByObject(map: list, object):
    Returns a list of order numbers of tiles affected by the object.


    ReturnTilesWithData(map: list, data_number: int):
    Returns a list of order numbers of tiles containing the specified data number. If the data number is not found, it returns an empty list.

